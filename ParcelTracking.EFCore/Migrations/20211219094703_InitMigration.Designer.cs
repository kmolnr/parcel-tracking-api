// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelTracking.EFCore;

#nullable disable

namespace ParcelTracking.EFCore.Migrations
{
    [DbContext(typeof(ParcelTrackingDbContext))]
    [Migration("20211219094703_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ParcelTracking.EFCore.Models.Parcel", b =>
                {
                    b.Property<int>("ParcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParcelId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ParcelId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Parcel");

                    b.HasData(
                        new
                        {
                            ParcelId = 1,
                            Code = "QWER0001",
                            UserId = 1
                        },
                        new
                        {
                            ParcelId = 2,
                            Code = "QWER0002",
                            UserId = 1
                        },
                        new
                        {
                            ParcelId = 3,
                            Code = "QWER0003",
                            UserId = 2
                        },
                        new
                        {
                            ParcelId = 4,
                            Code = "QWER0004",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelItem", b =>
                {
                    b.Property<int>("ParcelItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParcelItemId"), 1L, 1);

                    b.Property<int>("ParcelId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ParcelItemId");

                    b.HasIndex("ParcelId");

                    b.HasIndex("ProductId");

                    b.ToTable("ParcelItem");

                    b.HasData(
                        new
                        {
                            ParcelItemId = 1,
                            ParcelId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            ParcelItemId = 2,
                            ParcelId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            ParcelItemId = 3,
                            ParcelId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            ParcelItemId = 4,
                            ParcelId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            ParcelItemId = 5,
                            ParcelId = 4,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelParcelStatus", b =>
                {
                    b.Property<int>("ParcelId")
                        .HasColumnType("int");

                    b.Property<int>("ParcelStatusId")
                        .HasColumnType("int");

                    b.HasKey("ParcelId", "ParcelStatusId");

                    b.HasIndex("ParcelStatusId");

                    b.ToTable("ParcelParcelStatus");

                    b.HasData(
                        new
                        {
                            ParcelId = 1,
                            ParcelStatusId = 1
                        },
                        new
                        {
                            ParcelId = 2,
                            ParcelStatusId = 2
                        },
                        new
                        {
                            ParcelId = 3,
                            ParcelStatusId = 3
                        },
                        new
                        {
                            ParcelId = 4,
                            ParcelStatusId = 4
                        },
                        new
                        {
                            ParcelId = 1,
                            ParcelStatusId = 5
                        },
                        new
                        {
                            ParcelId = 2,
                            ParcelStatusId = 1
                        },
                        new
                        {
                            ParcelId = 3,
                            ParcelStatusId = 2
                        },
                        new
                        {
                            ParcelId = 4,
                            ParcelStatusId = 3
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelStatus", b =>
                {
                    b.Property<int>("ParcelStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParcelStatusId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HungarianDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParcelStatusId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("ParcelStatus");

                    b.HasData(
                        new
                        {
                            ParcelStatusId = 1,
                            Code = "WfPU",
                            Description = "Waiting for Pick Up",
                            HungarianDescription = "Csomag a feladónál. Futárra vár."
                        },
                        new
                        {
                            ParcelStatusId = 2,
                            Code = "PU",
                            Description = "Picked Up",
                            HungarianDescription = "Csomag a futárnál. Depóba tart."
                        },
                        new
                        {
                            ParcelStatusId = 3,
                            Code = "ID",
                            Description = "In Deposit",
                            HungarianDescription = "Depóban van. Kiszállításra vár."
                        },
                        new
                        {
                            ParcelStatusId = 4,
                            Code = "OD",
                            Description = "On Delivery",
                            HungarianDescription = "Kiszállítás alatt áll. Célba tart."
                        },
                        new
                        {
                            ParcelStatusId = 5,
                            Code = "DD",
                            Description = "Delivered",
                            HungarianDescription = "Kiszállítva."
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Fender Stratocaster"
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Gibson Les Paul"
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Fender Telecaster"
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Gibson SG Standard"
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "user1",
                            Password = "user1",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "user2",
                            Password = "user2",
                            Role = "user"
                        });
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.Parcel", b =>
                {
                    b.HasOne("ParcelTracking.EFCore.Models.User", "User")
                        .WithMany("Parcels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelItem", b =>
                {
                    b.HasOne("ParcelTracking.EFCore.Models.Parcel", "Parcel")
                        .WithMany("ParcelItems")
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelTracking.EFCore.Models.Product", "Product")
                        .WithMany("ParcelItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelParcelStatus", b =>
                {
                    b.HasOne("ParcelTracking.EFCore.Models.Parcel", "Parcel")
                        .WithMany("ParcelParcelStatus")
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelTracking.EFCore.Models.ParcelStatus", "ParcelStatus")
                        .WithMany("ParcelParcelStatus")
                        .HasForeignKey("ParcelStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");

                    b.Navigation("ParcelStatus");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.Parcel", b =>
                {
                    b.Navigation("ParcelItems");

                    b.Navigation("ParcelParcelStatus");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.ParcelStatus", b =>
                {
                    b.Navigation("ParcelParcelStatus");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.Product", b =>
                {
                    b.Navigation("ParcelItems");
                });

            modelBuilder.Entity("ParcelTracking.EFCore.Models.User", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
